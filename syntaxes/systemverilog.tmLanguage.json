{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SystemVerilog",
	"scopeName": "source.sv",
	"fileTypes": [".sv", ".v"],
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#storage"
		},
		{
			"include": "#constant"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"include": "#operators"
				},
				{
					"name": "keyword.control.procedural.sv",
					"match": "\\b(initial|final|always_(comb|ff|latch)\\b"
				},
				{
					"name": "keyword.control.subroutines.sv",
					"match": "\\b(task|endtask|function|endfunction)\\b"
				},
				{
					"name": "keyword.control.assignment.sv",
					"match": "\\b(assign|deassign)\\b"
				},
				{
					"name": "keyword.control.selection.sv",
					"match": "\\b(if|else|case|casex|casez|unique|unique0|priority)\\b"
				},
				{
					"name": "keyword.control.loop.sv",
					"match": "\\b(do|while|for|foreach|repeat|forever|break|continue|return)\\b"
				},
				{
					"name": "keyword.control.parallel.sv",
					"match": "\\b(fork|join|join_any|join_none|disable)\\b"
				},
				{
					"name": "keyword.control.clocking.sv",
					"match": "\\b(clocking|endclocking|default|wait|wait_order|iff|posedge|negedge|edge)\\b"
				},
				{
					"name": "keyword.control.clause.sv",
					"match": "\\b(begin|end)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.sv",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.sv",
					"match": "\\\\."
				}
			]
		},
		"storage": {
			"patterns": [
				{
					"name": "storage.type.nets.sv",
					"match": "\\b(wire|wand|wor|tri|triand|trior|tri0|tri1|trireg|supply0|supply1|uwire)\\b"
				},
				{
					"name": "storage.type.data.sv",
					"match": "\\b(integer|int|longint|shortint|logic|bit|byte|real|shortreal|string|void)\\b"
				},
				{
					"name": "storage.type.parameters.sv",
					"match": "\\b(parameter|localparam)\\b"
				},
				{
					"name": "storage.type.other.sv",
					"match": "\\b(var|time|realtime|enum|struct|rand|randc|genvar|interconnect|event|chandle)\\b"
				},
				{
					"name": "storage.modifier.sv",
					"match": "\\b(input|output|unpacked|signed|unsigned|automatic|static)\\b"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.line.double-slash.sv",
					"match": "\\/\\/.*"
				},
				{
					"name": "comment.block.sv",
					"begin": "\\/\\*",
					"end": "\\*\\/"
				}
			]
		},
		"constant": {
			"patterns":[
				{
					"name": "constant.numeric.casted.hex.sv",
					"match": "\\d*'h[0-9a-fA-F]+\\b"
				},
				{
					"name": "constant.numeric.casted.binary.sv",
					"match": "\\d*'b[01]+\\b"
				},
				{
					"name": "constant.numeric.casted.decimal.sv",
					"match": "\\d*'d[0-9]+\\b"
				},
				{
					"name": "constant.numeric.casted.blank.sv",
					"match": "'[01zx]+\\b"
				},

				{
					"name": "constant.numeric.decimal.sv",
					"match": "\\b(\\d+)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.assignment.sv",
					"match": "\\*=|\\+=|=|\\-=|/=|%=|&=|\\|=|\\^=|<<=|<<<=|>>=|>>>="
				},
				{
					"name": "keyword.operator.arithmetic.sv",
					"match": "\\+|\\-|\\*|/|%"
				},
				{
					"name": "keyword.operator.logical.sv",
					"match": "!|&&|\\|\\|"
				},
				{
					"name": "keyword.operator.relation.sv",
					"match": "<|<=|>|>="
				},
				{
					"name": "keyword.operator.equality.sv",
					"match": "==|===|!=|!=="
				},
				{
					"name": "keyword.operator.wildequality.sv",
					"match": "=\\?=|!\\?="
				},
				{
					"name": "keyword.operator.shift.sv",
					"match": "<<|>>"
				},
				{
					"name": "keyword.operator.condition.sv",
					"match": "\\?"
				},
				{
					"name": "keyword.operator.event.sv",
					"match": "@|#|->|->>"
				},
				{
					"name": "keyword.operator.bitwise.sv",
					"match": "\\^|\\~|&|\\||\\^\\~|\\~\\^"
				}
			]
			}
	}
}